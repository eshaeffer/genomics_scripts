#!/bin/bash

##
#$ -S /bin/bash
##
#### This is an example submission script.
#### The lines that begin with `#$` are used
#### as arguments to qsub, while lines that
#### start with just `##` are comments
##
#### The below line determines how many CPUs
#### your job will request. Only set it higher 
#### if you need the additional memory
#$ -pe smp 16
##
#### If your job requires lots more memory,
#### use one of the below options by removing
#### the first two `#`
####$ -l mid_mem
####$ -l high_mem
##
#### The below option determines which queues 
#### your job is submitted to. Multiple can be
#### passed if separated by a comma
#$ -q UI 
##
#### The below option tells the compute node to 
#### begin execution from the same directory as
#### where you run the qsub. Otherwise, it is 
#### executed from '~/' -- which is where your
#### log file will end up. 
#$ -cwd
##
#### The remining options all deal with making
#### sure your log file is in the correct format
#$ -j y
#$ -o $JOB_NAME.log 
#$ -ckpt user
##################
## DON'T FORGET ##
##  TO SET THE  ## 
##   JOB NAME   ##
##################
#$ -N vep

#### The below variables are a helpful way to
#### avoid having to repeat long file paths many
#### times. You may need to add more variables
#### as we do more analyses. 
DNA_HOME=~/workspace/dna
DATA=$DNA_HOME/data
TOOL=/bin


#### The below lines print the date to the log
#### and then store it as a variable
date
start=`date +%s`


########################################
## Put the commands you are executing ##
## inside of the " " on the next line ##
## so they will be printed to the log ##
########################################
CMD="
"


#### The below commands prints the text you
#### assigned to the CMD variable to the log
echo "**************************************"
echo "commands=$CMD"
echo "**************************************"

########################################
## Put the commands you are executing ##
##  in the lines below this comment,  ##
##   so they are actually  executed   ##
########################################

module load htslib


~/miniconda3/bin/vep \
-fork 16 \
--cache \
--merged \
--plugin \
CADD,/CADD/whole_genome_SNVs.tsv.gz,/CADD/InDels.tsv.gz \
--custom \
/gnomad_vep/gnomad.exomes.r2.0.1.sites.GRCh38.noVEP.vcf.gz,\
gnomADe,vcf,exact,0,AF_POPMAX \
--custom \
/gnomad_vep/gnomad.genomes.r2.0.1.sites.GRCh38.noVEP.vcf.gz,\
gnomADg,vcf,exact,0,AF_POPMAX \
--variant_class \
--force_overwrite \
--symbol \
--numbers \
--exclude_predicted \
--pick \
--vcf \
--fasta ~/.vep/homo_sapiens_merged/99_GRCh38/Homo_sapiens.GRCh38.dna.toplevel.fa.gz --hgvs \
-i input.vcf \
-o output.vcf -offline

#haplotypeCaller_vep
#### The below commands print the date that your
#### job finished running to the log, and then
#### calcualtes the total amount of time it took
#### for the job to complete
date
end=`date +%s`
runtime=$((end-start))
echo "runtime=$runtime secs"

